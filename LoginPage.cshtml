@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
@{

    Page.Title = "Log in";

    // Initialize general page variables
    var email = "";
    var password = "";
    var rememberMe = false;

    var returnUrl = Request.QueryString["ReturnUrl"];
    if (returnUrl.IsEmpty())
    {
        // Some external login providers always require a return URL value
        returnUrl = Href("~/Default-Page");
    }

    // Setup validation
    Validation.RequireField("email", "You must specify an email address.");
    Validation.RequireField("password", "You must specify a password.");
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Password must be at least 6 characters"));

    // If this is a POST request, validate and process data
    if (IsPost)
    {
        AntiForgery.Validate();
        // is this an external login request?
        string provider = Request.Form["provider"];
        if (!provider.IsEmpty())
        {
            OAuthWebSecurity.RequestAuthentication(provider, Href("~/Account/RegisterService", new { returnUrl }));
            return;
        }
        else if (Validation.IsValid())
        {
            email = Request.Form["email"];
            password = Request.Form["password"];
            rememberMe = Request.Form["rememberMe"].AsBool();

            if (WebSecurity.UserExists(email) && WebSecurity.GetPasswordFailuresSinceLastSuccess(email) > 4 && WebSecurity.GetLastPasswordFailureDate(email).AddSeconds(60) > DateTime.UtcNow)
            {
                Response.Redirect("~/Account/AccountLockedOut");
                return;
            }

            // Attempt to log in using provided credentials
            if (WebSecurity.Login(email, password, rememberMe))
            {
                Context.RedirectLocal(returnUrl);
                return;
            }
            else
            {
                ModelState.AddFormError("The user name or password provided is incorrect.");
            }
        }
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <link href="~/css/Logo.css" rel="stylesheet" type="text/css" />
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/Logo.css" />
    <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">

    <!-- Latest compiled and minified JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

    <!--Responsive Mobiel-->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <meta charset="utf-8" />
</head>
<body style="background-color:#BDE0FB">
    <br />
    <br />
    <br />
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-6 col-lg-offset-3">
                <form class="panel" method="post">
                    <div class="text-center">
                        <section id="loginForm" class="col s12">
                            <br /><br />
                            <img src="~/Images/child-reading-book_icon-icons.com_49293.png" height="150" width="150" />
                            <br /><br />
                            <h2>Account Gegevens invullen</h2>
                            <br />
                            <br /><br />
                            @*<form method="post">*@
                            @AntiForgery.GetHtml()
                            @* If one or more validation errors exist, show an error *@
                            @Html.ValidationSummary("Log in was unsuccessful. Please correct the errors and try again.", excludeFieldErrors: true, htmlAttributes: null)
                            <fieldset>
                                <ol style="list-style:none">
                                    <li class="email">
                                        <label for="email" @if (!ModelState.IsValidField("email")) { <text> class="error-label" </text>        }>Email address</label>
                                        <input type="text" id="email" name="email" value="@email" @Validation.For("email") />
                                        @* Write any user name validation errors to the page *@
                                        @Html.ValidationMessage("email")
                                    </li>
                                    <li class="password">
                                        <label for="password" @if (!ModelState.IsValidField("password")) { <text> class="error-label" </text>        }>Password</label>
                                        <input type="password" id="password" name="password" @Validation.For("password") />
                                        @* Write any password validation errors to the page *@
                                        @Html.ValidationMessage("password")
                                    </li>
                                    <li class="remember-me">
                                        <input type="checkbox" id="rememberMe" name="rememberMe" value="true" checked="@rememberMe" />
                                        <label class="checkbox" for="rememberMe">Remember me?</label>
                                    </li>
                                </ol>
                                <input type="submit" value="Log in" />
                            </fieldset>
                            @*</form>*@
                            <br /><br />
                            <p>
                                <a href="~/RegisterPage.cshtml">Don't have a Account?</a>
                            </p>
                        </section>
                    </div>
                </form>
            </div>
        </div>
    </div>
</body>
</html>
